rowStyle = list(cursor = "pointer"),
minRows = 10
)
tbl
runApp()
data_map %>%
mutate(Bulan == month.name[month(as.Date(Tanggal, format = "%d-%m-%Y"))])
data_map %>%
mutate(Bulan = month.name[month(as.Date(Tanggal, format = "%d-%m-%Y"))])
runApp()
library(sf)
library(leaflet)
library(dplyr)
library(openxlsx)
library(units)
batas_kec_sulbar <- readRDS("data/batas_kec_sulbar.rds")
batas_kec_sulbar <- batas_kec_sulbar %>%
mutate(Kab_Kota = if_else(Kab_Kota == "MAMUJU UTARA", "PASANGKAYU", Kab_Kota),
Kecamatan = if_else(Kecamatan == "SIMBORO DAN KEPULAUAN", "SIMBORO", Kecamatan))
presensi <- readxl::read_excel("hasil/scrap_sep_presensi.xlsx")
presensi$lat1 <- as.numeric(presensi$lat1)
presensi$lat2 <- as.numeric(presensi$lat2)
presensi$lon1 <- as.numeric(presensi$lon1)
presensi$lon2 <- as.numeric(presensi$lon2)
presensi <- presensi %>%
mutate(lat1 = if_else(lat1 > 10, 0, lat1),
lat2 = if_else(lat2 > 10, 0, lat2)
)
presensi$presensi_cek= 1:nrow(presensi)
###
kantor_opd <- data.frame(
Kab = c("PASANGKAYU", "MAMUJU TENGAH", "MAMUJU",
"MAJENE", "POLEWALI MANDAR", "MAMASA"),
Nama = c("OPD KB Pasangkayu", "OPD KB MATENG", "OPD KB MAMUJU",
"OPD KB MAJENE", "OPD KB POLMAN", "OPD KB Mamasa"),
Lat = as.numeric(c(-1.1746695, -2.0615864, -2.6780518,
-3.5421326, -3.4174718, -2.9458679)),
Long = as.numeric(c(119.3759606, 119.2865281, 118.8911821,
118.9849558, 119.319912, 119.3700759))
)
####
for (i in 1:nrow(presensi)) {
print(i)
batas_kec = batas_kec_sulbar %>%
filter(Kab_Kota == presensi$Kabupaten[i],
Kecamatan == presensi$Kecamatan[i])
titik_awal <- st_sfc(st_point(c(presensi$lon1[i], presensi$lat1[i])),
crs = st_crs(batas_kec))
hasil_awal <- st_within(titik_awal, batas_kec)
titik_akhir <- st_sfc(st_point(c(presensi$lon2[i], presensi$lat2[i])),
crs = st_crs(batas_kec))
hasil_akhir <- st_within(titik_akhir, batas_kec)
## Cek OPD KB
kantor_opd_filter = kantor_opd %>%
filter(Kab == presensi$Kabupaten[i])
opd_long = kantor_opd_filter$Long
opd_lat = kantor_opd_filter$Lat
presensi_lon1 = presensi$lon1[i]
presensi_lat1 = presensi$lat1[i]
presensi_lon2 = presensi$lon2[i]
presensi_lat2 = presensi$lat2[i]
cek_radius <- function(lon_pusat, lat_pusat, lon_pemeriksa, lat_pemeriksa, radius_m = 1000) {
# Membuat titik pusat dan titik yang akan diperiksa
titik_pusat <- st_point(c(lon_pusat, lat_pusat)) # longitude, latitude
titik_pemeriksa <- st_point(c(lon_pemeriksa, lat_pemeriksa)) # longitude, latitude
# Mengubah menjadi objek sf dengan CRS WGS 84 (EPSG: 4326)
sf_pusat <- st_sfc(titik_pusat, crs = 4326)
sf_pemeriksa <- st_sfc(titik_pemeriksa, crs = 4326)
# Mengubah ke CRS yang menggunakan meter sebagai satuan (misalnya UTM Zone 48S, EPSG: 32748)
sf_pusat <- st_transform(sf_pusat, crs = 32748)
sf_pemeriksa <- st_transform(sf_pemeriksa, crs = 32748)
# Menghitung jarak antara dua titik dalam meter
jarak <- st_distance(sf_pusat, sf_pemeriksa)
# Konversi radius ke objek dengan satuan yang sama
threshold <- set_units(radius_m, "m")
# Menentukan apakah titik berada di luar radius yang ditentukan
di_luar_radius <- jarak > threshold
return(di_luar_radius)
}
awal_opd_kb <- cek_radius(presensi_lon1, presensi_lat1, opd_long, opd_lat)
akhir_opd_kb <- cek_radius(presensi_lon2, presensi_lat2, opd_long, opd_lat)
# Mengecek hasilnya
if ((lengths(hasil_awal) > 0 && lengths(hasil_akhir) > 0) ||
(lengths(hasil_awal) > 0 && awal_opd_kb == F) ||
(lengths(hasil_awal) > 0 && akhir_opd_kb == F) ||
(lengths(hasil_akhir) > 0 && awal_opd_kb == F ) ||
(lengths(hasil_akhir) > 0 && akhir_opd_kb == F ) ||
(awal_opd_kb == F && akhir_opd_kb == F)) {
print("Titik berada di dalam poligon kecamatan.")
presensi$presensi_cek[i] = "Presensi Sesuai"
#} else if (lengths(hasil_awal) > 0 & lengths(hasil_akhir) <= 0) {
#print("Titik akhir berada di luar poligon kecamatan.")
#presensi$presensi_cek[i] = "Titik akhir berada di luar poligon kecamatan"
#} else if (lengths(hasil_awal) <= 0 & lengths(hasil_akhir) > 0) {
# print("Titik awal berada di luar poligon kecamatan.")
#  presensi$presensi_cek[i] = "Titik awal berada di luar poligon kecamatan"
} else {
print("Titik berada di luar poligon kecamatan.")
presensi$presensi_cek[i] = "Presensi Tidak Sesuai"
}
}
write.xlsx(presensi, "hasil/cek_presensi_asept_full.xlsx")
data_map <- data.table::fread("hasil/cek_keterangan_presensi_full.csv")
data_map <- data_map %>%
select(-(V1))
runApp()
data_map$lat1 <- as.numeric(data_map$lat1)
data_map$lat2 <- as.numeric(data_map$lat2)
data_map$lon1 <- as.numeric(data_map$lon1)
data_map$lon2 <- as.numeric(data_map$lon2)
kantor_opd <- data.frame(
Kab = c("PASANGKAYU", "MAMUJU TENGAH", "MAMUJU",
"MAJENE", "POLEWALI MANDAR", "MAMASA"),
Nama = c("OPD KB Pasangkayu", "OPD KB MATENG", "OPD KB MAMUJU",
"OPD KB MAJENE", "OPD KB POLMAN", "OPD KB Mamasa"),
Lat = as.numeric(c(-1.1746695, -2.0615864, -2.6780518,
-3.5421326, -3.4174718, -2.9458679)),
Long = as.numeric(c(119.3759606, 119.2865281, 118.8911821,
118.9849558, 119.319912, 119.3700759))
)
Nama1 = "NUR AYNY"
Kecamatan1 = "BAMBALAMOTU"
Bulan1 = "May"
vb_data = data_map %>%
filter(Kecamatan == Kecamatan1,
Nama == Nama1) %>%
mutate(Bulan = format(as.Date(Tanggal, format = "%d-%m-%Y"), "%B")) %>%
filter(Bulan == Bulan1)
View(vb_data)
data_map = vb_data
data_map
data_map$lat1 <- as.numeric(data_map$lat1)
data_map$lat2 <- as.numeric(data_map$lat2)
data_map$lon1 <- as.numeric(data_map$lon1)
data_map$lon2 <- as.numeric(data_map$lon2)
kantor_opd <- data.frame(
Kab = c("PASANGKAYU", "MAMUJU TENGAH", "MAMUJU",
"MAJENE", "POLEWALI MANDAR", "MAMASA"),
Nama = c("OPD KB Pasangkayu", "OPD KB MATENG", "OPD KB MAMUJU",
"OPD KB MAJENE", "OPD KB POLMAN", "OPD KB Mamasa"),
Lat = as.numeric(c(-1.1746695, -2.0615864, -2.6780518,
-3.5421326, -3.4174718, -2.9458679)),
Long = as.numeric(c(119.3759606, 119.2865281, 118.8911821,
118.9849558, 119.319912, 119.3700759))
)
batas_kec = batas_kec_sulbar %>%
filter(Kecamatan == data_map$Kecamatan[1])
batas_kec_sulbar <- readRDS("data/batas_kec_sulbar.rds")
batas_kec_sulbar <- batas_kec_sulbar %>%
mutate(Kab_Kota = if_else(Kab_Kota == "MAMUJU UTARA", "PASANGKAYU", Kab_Kota),
Kecamatan = if_else(Kecamatan == "SIMBORO DAN KEPULAUAN", "SIMBORO", Kecamatan))
batas_kec = batas_kec_sulbar %>%
filter(Kecamatan == data_map$Kecamatan[1])
titik_kantor_opd = kantor_opd %>%
filter(Kab == data_map$Kabupaten[1])
data_map$lat1
hasil = tibble(
latitude = c(data_map$lat1, data_map$lat2),
longitude = c(data_map$lon1, data_map$lon2)
) %>%
reverse_geocode(
lat = latitude,
long = longitude,
method = "osm",
address = address_found,
full_results = TRUE
)
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = batas_kec$lon1, lat = batas_kec$lat1,
popup = paste(hasil$address_found[1], hasil$road[1], hasil$village[1],
hasil$municipality[1], sep = " | "),
label = "Awal") %>%
addMarkers(lng = batas_kec$lon2, lat = batas_kec$lat2,
popup = paste(hasil$address_found[2], hasil$road[1],
hasil$village[2], hasil$municipality[2], sep = " | "),
label = "Akhir") %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2) %>%
setView(lng = (selected_row$lon1 + selected_row$lon2) / 2,
lat = (selected_row$lat1 + selected_row$lat2) / 2, zoom = 12)
batas_kec$lon1 + batas_kec$lon2) / 2
(batas_kec$lon1 + batas_kec$lon2) / 2
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = batas_kec$lon1, lat = batas_kec$lat1,
popup = paste(hasil$address_found[1], hasil$road[1], hasil$village[1],
hasil$municipality[1], sep = " | "),
label = "Awal") %>%
addMarkers(lng = batas_kec$lon2, lat = batas_kec$lat2,
popup = paste(hasil$address_found[2], hasil$road[1],
hasil$village[2], hasil$municipality[2], sep = " | "),
label = "Akhir") %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2) %>%
setView(lng = (batas_kec$lon1 + batas_kec$lon2) / 2,
lat = (batas_kec$lat1 + batas_kec$lat2) / 2, zoom = 12)
View(data_map)
batas_kec$lon1
data_map$lon1
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = data_map$lon1, lat = data_map$lat1,
popup = paste(hasil$address_found[1], hasil$road[1], hasil$village[1],
hasil$municipality[1], sep = " | "),
label = "Awal") %>%
addMarkers(lng = data_map$lon2, lat = data_map$lat2,
popup = paste(hasil$address_found[2], hasil$road[1],
hasil$village[2], hasil$municipality[2], sep = " | "),
label = "Akhir") %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2) %>%
setView(lng = (data_map$lon1 + data_map$lon2) / 2,
lat = (data_map$lat1 + data_map$lat2) / 2, zoom = 12)
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = data_map$lon1, lat = data_map$lat1,
popup = paste(hasil$address_found[1], hasil$road[1], hasil$village[1],
hasil$municipality[1], sep = " | "),
label = "Awal") %>%
addMarkers(lng = data_map$lon2, lat = data_map$lat2,
popup = paste(hasil$address_found[2], hasil$road[1],
hasil$village[2], hasil$municipality[2], sep = " | "),
label = "Akhir") %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2)
asil$address_found[2]
hasil$address_found[2]
hasil
hasil$address_found
View(hasil)
hasil[1:(nrow(hasil)/2)]$address_found
nrow(hasil)
nrow(hasil)/2
hasil[1:(nrow(hasil)/2)]$address_found
hasil[1:(nrow(hasil)/2),]$address_found
hasil[(nrow(hasil)/2):nrow(hasil),]$address_found
(nrow(hasil)/2)+1
hasil[(nrow(hasil)/2)+1:nrow(hasil),]$address_found
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$address_found,
((nrow(hasil)/2)+1)
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$address_found
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = data_map$lon1, lat = data_map$lat1,
popup = paste(hasil[1:(nrow(hasil)/2),]$address_found,
hasil[1:(nrow(hasil)/2),]$road,
hasil[1:(nrow(hasil)/2),]$village,
hasil[1:(nrow(hasil)/2),]$municipality,
sep = " | "),
label = "Awal") %>%
addMarkers(lng = data_map$lon2, lat = data_map$lat2,
popup = paste(hasil[((nrow(hasil)/2)+1):nrow(hasil),]$address_found,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$road,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$village,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$municipality, sep = " | "),
label = "Akhir") %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2)
runApp()
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = data_map$lon1, lat = data_map$lat1,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[1:(nrow(hasil)/2),]$address_found,
hasil[1:(nrow(hasil)/2),]$road,
hasil[1:(nrow(hasil)/2),]$village,
hasil[1:(nrow(hasil)/2),]$municipality,
sep = " | "),
label = "Awal") %>%
addMarkers(lng = data_map$lon2, lat = data_map$lat2,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[((nrow(hasil)/2)+1):nrow(hasil),]$address_found,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$road,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$village,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$municipality, sep = " | "),
label = "Akhir") %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2)
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = data_map$lon1, lat = data_map$lat1,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[1:(nrow(hasil)/2),]$address_found,
hasil[1:(nrow(hasil)/2),]$road,
hasil[1:(nrow(hasil)/2),]$village,
hasil[1:(nrow(hasil)/2),]$municipality,
sep = " | "),
label = paste("Awal", data_map$Tanggal)) %>%
addMarkers(lng = data_map$lon2, lat = data_map$lat2,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[((nrow(hasil)/2)+1):nrow(hasil),]$address_found,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$road,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$village,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$municipality, sep = " | "),
label = paste("Akhir",data_map$Tanggal)) %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2)
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = data_map$lon1, lat = data_map$lat1,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[1:(nrow(hasil)/2),]$address_found,
hasil[1:(nrow(hasil)/2),]$road,
hasil[1:(nrow(hasil)/2),]$village,
hasil[1:(nrow(hasil)/2),]$municipality,
sep = " | "),
label = paste0(data_map$Tanggal, " - Awal")) %>%
addMarkers(lng = data_map$lon2, lat = data_map$lat2,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[((nrow(hasil)/2)+1):nrow(hasil),]$address_found,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$road,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$village,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$municipality, sep = " | "),
label = paste0(data_map$Tanggal, " - Akhir")) %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2)
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinycssloaders")
runApp()
runApp()
data_map$lat1 <- as.numeric(data_map$lat1)
data_map$lat2 <- as.numeric(data_map$lat2)
data_map$lon1 <- as.numeric(data_map$lon1)
data_map$lon2 <- as.numeric(data_map$lon2)
###
kantor_opd <- data.frame(
Kab = c("PASANGKAYU", "MAMUJU TENGAH", "MAMUJU",
"MAJENE", "POLEWALI MANDAR", "MAMASA"),
Nama = c("OPD KB Pasangkayu", "OPD KB MATENG", "OPD KB MAMUJU",
"OPD KB MAJENE", "OPD KB POLMAN", "OPD KB Mamasa"),
Lat = as.numeric(c(-1.1746695, -2.0615864, -2.6780518,
-3.5421326, -3.4174718, -2.9458679)),
Long = as.numeric(c(119.3759606, 119.2865281, 118.8911821,
118.9849558, 119.319912, 119.3700759))
)
batas_kec = batas_kec_sulbar %>%
filter(Kecamatan == data_map$Kecamatan[1])
titik_kantor_opd = kantor_opd %>%
filter(Kab == data_map$Kabupaten[1])
hasil = tibble(
latitude = c(data_map$lat1, data_map$lat2),
longitude = c(data_map$lon1, data_map$lon2)
) %>%
reverse_geocode(
lat = latitude,
long = longitude,
method = "osm",
address = address_found,
full_results = TRUE
)
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = data_map$lon1, lat = data_map$lat1,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[1:(nrow(hasil)/2),]$address_found,
hasil[1:(nrow(hasil)/2),]$road,
hasil[1:(nrow(hasil)/2),]$village,
hasil[1:(nrow(hasil)/2),]$municipality,
sep = " | "),
label = paste0(data_map$Tanggal, " - Awal")) %>%
addMarkers(lng = data_map$lon2, lat = data_map$lat2,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[((nrow(hasil)/2)+1):nrow(hasil),]$address_found,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$road,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$village,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$municipality, sep = " | "),
label = paste0(data_map$Tanggal, " - Akhir")) %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2)
runApp()
runApp()
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = data_map$lon1, lat = data_map$lat1,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[1:(nrow(hasil)/2),]$address_found,
hasil[1:(nrow(hasil)/2),]$road,
hasil[1:(nrow(hasil)/2),]$village,
hasil[1:(nrow(hasil)/2),]$municipality,
sep = " | "),
label = paste0(data_map$Tanggal, " - Awal")) %>%
addMarkers(lng = data_map$lon2, lat = data_map$lat2,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[((nrow(hasil)/2)+1):nrow(hasil),]$address_found,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$road,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$village,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$municipality, sep = " | "),
label = paste0(data_map$Tanggal, " - Akhir")) %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2)
runApp()
# Define UI
data_map <- data.table::fread("hasil/cek_keterangan_presensi_full.csv")
Kecamatan1 = "BAMBALAMOTU"
Nama1 = "NUR AYNI"
Bulan1 = "May"
vb_data = data_map %>%
filter(Kecamatan == Kecamatan1,
Nama == Nama1) %>%
mutate(Bulan = format(as.Date(Tanggal, format = "%d-%m-%Y"), "%B")) %>%
filter(Bulan == Bulan1)
# Kecamatan1 = "BAMBALAMOTU"
Nama1 = "NUR AYNY"
vb_data = data_map %>%
filter(Kecamatan == Kecamatan1,
Nama == Nama1) %>%
mutate(Bulan = format(as.Date(Tanggal, format = "%d-%m-%Y"), "%B")) %>%
filter(Bulan == Bulan1)
data_map = data
data_map$lat1 <- as.numeric(data_map$lat1)
data_map$lat2 <- as.numeric(data_map$lat2)
data_map$lon1 <- as.numeric(data_map$lon1)
data_map$lon2 <- as.numeric(data_map$lon2)
###
kantor_opd <- data.frame(
Kab = c("PASANGKAYU", "MAMUJU TENGAH", "MAMUJU",
"MAJENE", "POLEWALI MANDAR", "MAMASA"),
Nama = c("OPD KB Pasangkayu", "OPD KB MATENG", "OPD KB MAMUJU",
"OPD KB MAJENE", "OPD KB POLMAN", "OPD KB Mamasa"),
Lat = as.numeric(c(-1.1746695, -2.0615864, -2.6780518,
-3.5421326, -3.4174718, -2.9458679)),
Long = as.numeric(c(119.3759606, 119.2865281, 118.8911821,
118.9849558, 119.319912, 119.3700759))
)
data_map$lat1 <- as.numeric(data_map$lat1)
Kecamatan1 = "BAMBALAMOTU"
Nama1 = "NUR AYNY"
Bulan1 = "May"
vb_data = data_map %>%
filter(Kecamatan == Kecamatan1,
Nama == Nama1) %>%
mutate(Bulan = format(as.Date(Tanggal, format = "%d-%m-%Y"), "%B")) %>%
filter(Bulan == Bulan1)
data_map <- data.table::fread("hasil/cek_keterangan_presensi_full.csv")
vb_data = data_map %>%
filter(Kecamatan == Kecamatan1,
Nama == Nama1) %>%
mutate(Bulan = format(as.Date(Tanggal, format = "%d-%m-%Y"), "%B")) %>%
filter(Bulan == Bulan1)
data_map = vb_data
data_map$lat1 <- as.numeric(data_map$lat1)
data_map$lat2 <- as.numeric(data_map$lat2)
data_map$lon1 <- as.numeric(data_map$lon1)
data_map$lon2 <- as.numeric(data_map$lon2)
###
kantor_opd <- data.frame(
Kab = c("PASANGKAYU", "MAMUJU TENGAH", "MAMUJU",
"MAJENE", "POLEWALI MANDAR", "MAMASA"),
Nama = c("OPD KB Pasangkayu", "OPD KB MATENG", "OPD KB MAMUJU",
"OPD KB MAJENE", "OPD KB POLMAN", "OPD KB Mamasa"),
Lat = as.numeric(c(-1.1746695, -2.0615864, -2.6780518,
-3.5421326, -3.4174718, -2.9458679)),
Long = as.numeric(c(119.3759606, 119.2865281, 118.8911821,
118.9849558, 119.319912, 119.3700759))
)
batas_kec = batas_kec_sulbar %>%
filter(Kecamatan == data_map$Kecamatan[1])
batas_kec_sulbar <- readRDS("data/batas_kec_sulbar.rds")
batas_kec_sulbar <- batas_kec_sulbar %>%
mutate(Kab_Kota = if_else(Kab_Kota == "MAMUJU UTARA", "PASANGKAYU", Kab_Kota),
Kecamatan = if_else(Kecamatan == "SIMBORO DAN KEPULAUAN", "SIMBORO", Kecamatan))
batas_kec = batas_kec_sulbar %>%
filter(Kecamatan == data_map$Kecamatan[1])
titik_kantor_opd = kantor_opd %>%
filter(Kab == data_map$Kabupaten[1])
hasil = tibble(
latitude = c(data_map$lat1, data_map$lat2),
longitude = c(data_map$lon1, data_map$lon2)
) %>%
reverse_geocode(
lat = latitude,
long = longitude,
method = "osm",
address = address_found,
full_results = TRUE
)
leaflet(batas_kec) %>%
addTiles() %>%
addPolygons() %>%
addMarkers(lng = data_map$lon1, lat = data_map$lat1,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[1:(nrow(hasil)/2),]$address_found,
hasil[1:(nrow(hasil)/2),]$road,
hasil[1:(nrow(hasil)/2),]$village,
hasil[1:(nrow(hasil)/2),]$municipality,
sep = " | "),
label = paste0(data_map$Tanggal, " - Awal")) %>%
addMarkers(lng = data_map$lon2, lat = data_map$lat2,
clusterOptions = markerClusterOptions(),
popup = paste(hasil[((nrow(hasil)/2)+1):nrow(hasil),]$address_found,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$road,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$village,
hasil[((nrow(hasil)/2)+1):nrow(hasil),]$municipality, sep = " | "),
label = paste0(data_map$Tanggal, " - Akhir")) %>%
addCircles(lng = titik_kantor_opd$Long, lat = titik_kantor_opd$Lat, radius = 1000,
color = "red", fillColor = "red", fillOpacity = 0.2)
runApp()
